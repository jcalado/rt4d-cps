name: Build Desktop Packages

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    env:
      PYTHONUTF8: "1"
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Qt prerequisites (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxcb-xinerama0 libxkbcommon-x11-0 libxcb-cursor0

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Build executable
        run: |
          pyinstaller --noconfirm --windowed --name RT4D-Editor rt4d_gui.py

      - name: Archive build (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Set-Location dist
          Compress-Archive -Path RT4D-Editor -DestinationPath RT4D-Editor-windows.zip
          "ARTIFACT_PATH=dist/RT4D-Editor-windows.zip" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "ARTIFACT_NAME=RT4D-Editor-windows" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Archive build (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          cd dist
          zip -r RT4D-Editor-macos.zip RT4D-Editor.app
          echo "ARTIFACT_PATH=dist/RT4D-Editor-macos.zip" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=RT4D-Editor-macos" >> $GITHUB_ENV

      - name: Archive build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd dist
          zip -r RT4D-Editor-linux.zip RT4D-Editor
          echo "ARTIFACT_PATH=dist/RT4D-Editor-linux.zip" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=RT4D-Editor-linux" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}
