name: Release Packages

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
    env:
      PYTHONUTF8: "1"
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Determine version
        shell: python
        run: |
          import os
          ref = os.environ["GITHUB_REF_NAME"]
          version = ref[1:] if ref.startswith("v") else ref
          with open(os.environ["GITHUB_ENV"], "a", encoding="utf-8") as env_file:
              env_file.write(f"VERSION={version}\n")

      - name: Install Qt prerequisites (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxcb-xinerama0 libxkbcommon-x11-0 libxcb-cursor0

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pyinstaller

      - name: Verify version matches tag
        run: |
          python - <<'PY'
          import os
          import rt4d_codeplug

          tag_version = os.environ["VERSION"]
          pkg_version = rt4d_codeplug.__version__
          if pkg_version != tag_version:
              raise SystemExit(
                  f"Version mismatch: tag={tag_version} package={pkg_version}"
              )
          PY

      - name: Build executable
        run: |
          pyinstaller --noconfirm --windowed --name RT4D-Editor rt4d_gui.py

      - name: Archive build (Windows)
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Set-Location dist
          $archive = "RT4D-Editor-$env:VERSION-windows.zip"
          Compress-Archive -Path RT4D-Editor -DestinationPath $archive
          "ARTIFACT_PATH=dist/$archive" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "ARTIFACT_NAME=RT4D-Editor-$env:VERSION-windows" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Archive build (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          cd dist
          archive="RT4D-Editor-${VERSION}-macos.zip"
          zip -r "$archive" RT4D-Editor.app
          echo "ARTIFACT_PATH=dist/$archive" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=RT4D-Editor-${VERSION}-macos" >> $GITHUB_ENV

      - name: Archive build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd dist
          archive="RT4D-Editor-${VERSION}-linux.zip"
          zip -r "$archive" RT4D-Editor
          echo "ARTIFACT_PATH=dist/$archive" >> $GITHUB_ENV
          echo "ARTIFACT_NAME=RT4D-Editor-${VERSION}-linux" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACT_PATH }}

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Determine version
        shell: python
        run: |
          import os
          ref = os.environ["GITHUB_REF_NAME"]
          version = ref[1:] if ref.startswith("v") else ref
          with open(os.environ["GITHUB_ENV"], "a", encoding="utf-8") as env_file:
              env_file.write(f"VERSION={version}\n")

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: RT4D-Editor-*-*
          path: release

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: RT4D Editor ${{ env.VERSION }}
          fail_on_unmatched_files: true
          files: |
            release/RT4D-Editor-${{ env.VERSION }}-windows/RT4D-Editor-${{ env.VERSION }}-windows.zip
            release/RT4D-Editor-${{ env.VERSION }}-macos/RT4D-Editor-${{ env.VERSION }}-macos.zip
            release/RT4D-Editor-${{ env.VERSION }}-linux/RT4D-Editor-${{ env.VERSION }}-linux.zip
